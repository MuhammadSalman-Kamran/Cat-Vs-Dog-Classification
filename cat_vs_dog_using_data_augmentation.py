# -*- coding: utf-8 -*-
"""Cat vs Dog using Data Augmentation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yFejyhqK5b00pMdX1T6Ba49LbguCOuYK
"""

!mkdir -p ~/.kaggle
!cp kaggle.json ~/.kaggle/

!kaggle datasets download -d salader/dogs-vs-cats

import zipfile
zif_ref = zipfile.ZipFile('/content/dogs-vs-cats.zip')
zif_ref.extractall('/content')
zif_ref.close()

import tensorflow
from tensorflow import keras
from keras.preprocessing import image
from keras.preprocessing.image import ImageDataGenerator

datagen = ImageDataGenerator(
    rotation_range =30,
    rescale = 1./255,
    shear_range = 0.2,
    horizontal_flip = True,
    zoom_range = 0.2
)

test_datagen = ImageDataGenerator(
    rescale = 1./255
)

train_ds = datagen.flow_from_directory(
    directory = '/content/train',
    target_size = (150,150),
    batch_size = 32,
    class_mode = 'binary'
)

validation_ds = datagen.flow_from_directory(
    directory = '/content/test',
    batch_size = 32,
    target_size = (150,150),
    class_mode= 'binary'
)

from keras import Sequential
from keras.layers import Dense, Conv2D, Flatten,MaxPooling2D

model = Sequential()

model.add(Conv2D(32, kernel_size = (3,3),strides = 1, padding = 'valid',  activation = 'relu', input_shape = (150,150, 3)))
model.add(MaxPooling2D(pool_size = (2,2), strides = 2, padding = 'valid'))
model.add(Conv2D(64, kernel_size = (3,3), padding = 'valid', strides = 1, activation = 'relu'))
model.add(MaxPooling2D(pool_size = (2,2), strides = 2, padding = 'valid'))

model.add(Flatten())
model.add(Dense(128, activation = 'relu'))
model.add(Dense(64, activation = 'relu'))

model.summary()

model.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])

model.fit_generator(train_ds,steps_per_epoch = 2000, epochs = 5, validation_data = validation_ds, validation_steps = 800)

